version: '3.9'

# TODO: use .env file volume stuff
# TODO: use .env file config for environment sections
# TODO: define exact commit hashes
# TODO: do we need secrets/should we be using swarm mode?
# TODO: add a postgres backup container probably?
# TODO: need to add more volumes for postgres (logs etc)?

services:
  postgres:
    container_name: primal-kitchen/postgres
    image: postgres
    volumes:
      - ./data/postgres-volume:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_DATABASE}

  strapi:
    container_name: primal-kitchen/strapi
    image: primal-kitchen/strapi
    build:
      context: strapi
      dockerfile: Dockerfile
    ports:
      - ${STRAPI_PORT}:${STRAPI_PORT}
    env_file:
       - .env
      # - strapi/.env
    environment:
      DATABASE_CLIENT: postgres
      # must match name of service i think.. how does this work?
      DATABASE_HOST: postgres
      DATABASE_PORT: ${POSTGRES_PORT}
      DATABASE_NAME: ${POSTGRES_DATABASE}
      DATABASE_USERNAME: ${POSTGRES_USERNAME}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_SSL: ${POSTGRES_USING_SSL}
      PORT: ${STRAPI_PORT}
      HOST: ${STRAPI_HOST_URL}
      ADMIN_JWT_SECRET: ${STRAPI_ADMIN_JWT_SECRET}
    depends_on:
      - postgres

  redis:
    container_name: primal-kitchen/redis
    image: redis
    environment:
      # TODO: ... we need a password ...
      ALLOW_EMPTY_PASSWORD: 'yes'
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

  medusa:
    container_name: primal-kitchen/medusa
    image: primal-kitchen/medusa
    build:
      context: medusa
    environment:
      ADMIN_CORS: 'http://localhost:7000'
      STORE_CORS: ''
      DATABASE_URL: postgres://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}
      REDIS_URL: redis://localhost:${REDIS_PORT}
      STRIPE_API_KEY: ''
      STRIPE_WEBHOOK_SECRET: ''
    ports:
      - ${MEDUSA_STOREFRONT_API_PORT}:${MEDUSA_STOREFRONT_API_PORT}
    depends_on:
      - postgres
      - strapi
      - redis

  medusa-admin:
    container_name: primal-kitchen/medusa-admin
    image: primal-kitchen/medusa-admin
    build:
      context: medusa-admin
      dockerfile: ../medusa-admin.dockerfile
    ports:
      - ${MEDUSA_ADMIN_PANEL_PORT}:80
    depends_on:
      - medusa

  frontend:
    container_name: primal-kitchen/frontend
    image: primal-kitchen/frontend
    build:
      context: frontend
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    depends_on:
      - strapi
      - medusa

  reverse-proxy:
    build:
      context: reverse-proxy
    depends_on:
      - strapi
      - medusa
      - medusa-admin
      - frontend

#networks:
#  backend:
#    driver: bridge
