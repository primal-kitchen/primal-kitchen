name: 'create-env-file-on-server'
on: workflow_dispatch
jobs:
  do-it:
    runs-on: ubuntu-20.04
    steps:
      - name: 'create-env-file'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.APP_DOMAIN }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.CD_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.CD_SSH_PRIVATE_KEY_PASSPHRASE }} # added security
          # TODO: fingerprint validation
          script_stop: true # stop after first failure in script
          script: |
            cd ${{ secrets.SERVER_APP_DIRECTORY }}
            rm --force .env # force is needed to prevent error if not exists
            function add_line_to_env () { echo $1 >> .env }

            add_line_to_env "# generated by github action [2]"
            add_line_to_env "APP_DOMAIN=${{ secrets.APP_DOMAIN }}"
            add_line_to_env "APP_CONTAINER_REGISTRY=${{ secrets.APP_CONTAINER_REGISTRY }}"
            add_line_to_env "APP_DEVELOPER_EMAIL=${{ secrets.APP_DEVELOPER_EMAIL }}"
            add_line_to_env "SERVER_USERNAME=${{ secrets.SERVER_USERNAME }}"
            add_line_to_env "SERVER_APP_DIRECTORY=${{ secrets.SERVER_APP_DIRECTORY }}"
            add_line_to_env "SSL_CERTIFICATE_FILE=${{ secrets.SSL_CERTIFICATE_FILE }}"
            add_line_to_env "SSL_CERTIFICATE_PRIVATE_KEY_FILE=${{ secrets.SSL_CERTIFICATE_PRIVATE_KEY_FILE }}"

            add_line_to_env "# github actions CI/CD stuff"
            add_line_to_env "CD_SSH_PRIVATE_KEY=${{ secrets.CD_SSH_PRIVATE_KEY }}"
            add_line_to_env "CD_SSH_PRIVATE_KEY_PASSPHRASE=${{ secrets.CD_SSH_PRIVATE_KEY_PASSPHRASE }}"
            add_line_to_env "CD_DIGITALOCEAN_ACCESS_KEY=${{ secrets.CD_DIGITALOCEAN_ACCESS_KEY }}"

            add_line_to_env "# postgres"
            add_line_to_env "POSTGRES_USERNAME=${{ secrets.POSTGRES_USERNAME }}"
            add_line_to_env "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}"
            add_line_to_env "POSTGRES_DATABASE=${{ secrets.POSTGRES_DATABASE }}"
            add_line_to_env "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}"
            add_line_to_env "POSTGRES_VOLUME=${{ secrets.POSTGRES_VOLUME }}"
            add_line_to_env "POSTGRES_USING_SSL=${{ secrets.POSTGRES_USING_SSL }}"
            add_line_to_env "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}"
            
            add_line_to_env "# strapi"
            add_line_to_env "STRAPI_USERNAME=${{ secrets.STRAPI_USERNAME }}"
            add_line_to_env "STRAPI_PASSWORD=${{ secrets.STRAPI_PASSWORD }}"
            add_line_to_env "STRAPI_HOST_URL=${{ secrets.STRAPI_HOST_URL }}"
            add_line_to_env "STRAPI_PORT=${{ secrets.STRAPI_PORT }}"
            add_line_to_env "STRAPI_ADMIN_JWT_SECRET=${{ secrets.STRAPI_ADMIN_JWT_SECRET }}"
            add_line_to_env "STRAPI_CONTAINER_NAME=${{ secrets.STRAPI_CONTAINER_NAME }}"
            add_line_to_env "STRAPI_SUBDOMAIN=${{ secrets.STRAPI_SUBDOMAIN }}"

            add_line_to_env "# redis"
            add_line_to_env "REDIS_PORT=${{ secrets.REDIS_PORT }}"

            add_line_to_env "# minio"
            add_line_to_env "MINIO_ROOT_USER=${{ secrets.MINIO_ROOT_USER }}"
            add_line_to_env "MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }}"
            add_line_to_env "MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }}"
            add_line_to_env "MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }}"
            add_line_to_env "MINIO_HOSTNAME=${{ secrets.MINIO_HOSTNAME }}"
            add_line_to_env "MINIO_PORT=${{ secrets.MINIO_PORT }}"
            add_line_to_env "MINIO_CONSOLE_PORT=${{ secrets.MINIO_CONSOLE_PORT }}"
            add_line_to_env "MINIO_BUCKET=${{ secrets.MINIO_BUCKET }}"
            add_line_to_env "MINIO_SUBDOMAIN=${{ secrets.MINIO_SUBDOMAIN }}"
            add_line_to_env "MINIO_CONTAINER_NAME=${{ secrets.MINIO_CONTAINER_NAME }}"
            
            add_line_to_env "# medusa"
            add_line_to_env "MEDUSA_STOREFRONT_API_PORT=${{ secrets.MEDUSA_STOREFRONT_API_PORT }}"
            add_line_to_env "MEDUSA_STOREFRONT_SUBDOMAIN=${{ secrets.MEDUSA_STOREFRONT_SUBDOMAIN }}"
            add_line_to_env "MEDUSA_STOREFRONT_CONTAINER_NAME=${{ secrets.MEDUSA_STOREFRONT_CONTAINER_NAME }}"
            add_line_to_env "MEDUSA_STOREFRONT_COOKIE_SECRET=${{ secrets.MEDUSA_STOREFRONT_COOKIE_SECRET }}"
            add_line_to_env "MEDUSA_STOREFRONT_JWT_SECRET=${{ secrets.MEDUSA_STOREFRONT_JWT_SECRET }}"

            add_line_to_env "# medusa admin"
            add_line_to_env "MEDUSA_ADMIN_PANEL_PORT=${{ secrets.MEDUSA_ADMIN_PANEL_PORT }}"
            add_line_to_env "MEDUSA_ADMIN_PANEL_CONTAINER_NAME=${{ secrets.MEDUSA_ADMIN_PANEL_CONTAINER_NAME }}"
            add_line_to_env "MEDUSA_ADMIN_PANEL_SUBDOMAIN=${{ secrets.MEDUSA_ADMIN_PANEL_SUBDOMAIN }}"
            add_line_to_env "MEDUSA_ADMIN_EMAIL=${{ secrets.MEDUSA_ADMIN_EMAIL }}"
            add_line_to_env "MEDUSA_ADMIN_PASSWORD=${{ secrets.MEDUSA_ADMIN_PASSWORD }}"
            
            add_line_to_env "# frontend"
            add_line_to_env "FRONTEND_PORT=${{ secrets.FRONTEND_PORT }}"
            add_line_to_env "FRONTEND_CONTAINER_NAME=${{ secrets.FRONTEND_CONTAINER_NAME }}"

            add_line_to_env "# nginx"
            add_line_to_env "NGINX_WEBROOT=${{ secrets.NGINX_WEBROOT }} \"
