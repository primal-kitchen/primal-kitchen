# TODO: actually learn nginx properly
# TODO: perfect forward secrecy?
# TODO: ipv6 stuff
# TODO: find a way to repeat server block stuff less
# TODO: solve chicken or egg problem when certificates haven't yet been generated (the first time run on fresh server will crash nginx)
# TODO: should i be doing www redirects?
# TODO: 400 error pages
# TODO: 500 error pages

events {}
http {
	# upstream frontend {}
	# upstream strapi-admin {}
	# upstream medusa-admin {}
	# needed for uploading files
	client_max_body_size 20M;

	server {
		listen	80;
		server_name	*.${APP_DOMAIN}; # * very important for redirecting to subdomains on https
		server_tokens off; # what does this do? is it needed?

		# needed for ssl acme challenge
		location /.well-known/acme-challenge/ {
			allow all; # what does this do? is it needed?
			root ${NGINX_WEBROOT};
			default_type text/plain; # what does this do? is it needed?
		}

		# otherwise, redirect to https url to force secure
		location / {
			return 301 https://$host$request_uri;
		}
	}

	server {
		listen 443 ssl http2;
		server_name	${APP_DOMAIN};

		ssl_certificate /etc/nginx/ssl/live/${APP_DOMAIN}/${SSL_CERTIFICATE_FILE};
		ssl_certificate_key /etc/nginx/ssl/live/${APP_DOMAIN}/${SSL_CERTIFICATE_PRIVATE_KEY_FILE};

		location / {
			proxy_pass	http://${FRONTEND_CONTAINER_NAME}:${FRONTEND_PORT};
			# needed for HMR in next js... or just web sockets in general i think
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
		}
	}

	server {
		listen 443 ssl http2;
		server_name	${STRAPI_SUBDOMAIN}.${APP_DOMAIN};

		ssl_certificate /etc/nginx/ssl/live/${APP_DOMAIN}/${SSL_CERTIFICATE_FILE};
		ssl_certificate_key /etc/nginx/ssl/live/${APP_DOMAIN}/${SSL_CERTIFICATE_PRIVATE_KEY_FILE};

		location / {
			# TODO: update to strapi admin
			proxy_pass	http://${STRAPI_CONTAINER_NAME}:${STRAPI_PORT};
		}
	}

	server {
		listen 443 ssl http2;
		server_name	${MEDUSA_STOREFRONT_SUBDOMAIN}.${APP_DOMAIN};

		ssl_certificate /etc/nginx/ssl/live/${APP_DOMAIN}/${SSL_CERTIFICATE_FILE};
		ssl_certificate_key /etc/nginx/ssl/live/${APP_DOMAIN}/${SSL_CERTIFICATE_PRIVATE_KEY_FILE};

		location / {
			# TODO: update to medusa admin
			proxy_pass	http://${MEDUSA_STOREFRONT_CONTAINER_NAME}:${MEDUSA_STOREFRONT_API_PORT};
		}
	}

	server {
		listen 443 ssl http2;
		server_name	${MEDUSA_ADMIN_PANEL_SUBDOMAIN}.${APP_DOMAIN};

		ssl_certificate /etc/nginx/ssl/live/${APP_DOMAIN}/${SSL_CERTIFICATE_FILE};
		ssl_certificate_key /etc/nginx/ssl/live/${APP_DOMAIN}/${SSL_CERTIFICATE_PRIVATE_KEY_FILE};

		location / {
			# TODO: update to medusa admin
			proxy_pass	http://${MEDUSA_ADMIN_PANEL_CONTAINER_NAME}:80;

			# proxy_set_header Host $host;
		}
	}

	server {
		listen 443 ssl http2;
		server_name	${MINIO_SUBDOMAIN}.${APP_DOMAIN};

		ssl_certificate /etc/nginx/ssl/live/${APP_DOMAIN}/${SSL_CERTIFICATE_FILE};
		ssl_certificate_key /etc/nginx/ssl/live/${APP_DOMAIN}/${SSL_CERTIFICATE_PRIVATE_KEY_FILE};

		location / {
			proxy_pass	http://${MINIO_CONTAINER_NAME}:${MINIO_PORT};

			# proxy_set_header Host $host;
		}
	}
}
